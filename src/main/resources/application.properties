spring.application.name=chat-service

# Server
server.port=8082
server.address=0.0.0.0

# \u2705 Kafka (host machine accesses localhost)
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=chat-group
spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.app.chat_service.dto
spring.kafka.consumer.properties.fetch.max.bytes=10485760

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.max.request.size=10485760
spring.kafka.producer.properties.buffer.memory=20971520

# \u2705 Consumer max fetch size (to handle large messages)
spring.kafka.consumer.properties.max.partition.fetch.bytes=10485760

# server.properties \u2013 broker-wide
message.max.bytes=52428800
replica.fetch.max.bytes=52428800

# \u2705 PostgreSQL (external DB)
spring.datasource.url=jdbc:postgresql://chat-hrms.c3ykgskuuzr8.ap-south-1.rds.amazonaws.com:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=HrmAnasolDb
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.open-in-view=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.default_schema=chat

# \u2705 Redis (host machine accesses localhost)
spring.data.redis.host=localhost
spring.data.redis.port=6379
redis.chat.topic=chat-messages

# Cache
spring.cache.type=redis
spring.cache.redis.enable-statistics=true
management.endpoints.web.exposure.include=metrics,caches

# File Upload
project.image=images/
spring.servlet.multipart.enabled=true

# Increase max upload size if needed
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB

# Security
spring.security.enabled=false

# File upload directory (absolute or relative to app working dir)
file.upload-dir=uploads

logging:
  level:
    org.apache.kafka.clients.consumer: DEBUG
    org.springframework.kafka: DEBUG

# \uD83D\uDD11 Fix PostgreSQL Large Object (LOB) auto-commit issue
spring.datasource.hikari.auto-commit=false
